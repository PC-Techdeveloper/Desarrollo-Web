/*
M√âTODOS DE CLASE:
Un m√©todo es el nombre que recibe una funci√≥n que existe dentro de una clase. Se utilizan para englobar comportamientos o funcionalidades relacionadas en conjunto con la clase y mediante las cuales puede segmentar y separar en bloques de c√≥digo.
*/

// .repeat(): Repite un string N cantidad de veces

const text = 'Manz ';
console.log(text.repeat(3));

/*
¬øQU√â ES UN M√âTODO?
Un m√©todo es cuando hace referencia a funciones que existen en el interior de una clase.
*/

// √Åmbito global
function hablar() {
  return 'HOLA';
}

// En una clase -> Forma corta

class Animal {
  hablar() {
    return 'Primer cuak';
  }
}

const first = new Animal();
console.log(first.hablar());

// En una clase -> Forma larga
class OtroAnimal {
  hablar = function () {
    return 'Segundo cuak';
  };
}

const second = new OtroAnimal();
console.log(second.hablar());

/*
CONSTRUCTOR DE CLASE:
Se le llama constructor a un m√©todo de clase especial que se ejecut√° autom√°ticamente cuando se hace un 'new' de dicha clase al instanciar el objeto. Una clase SOLO PUEDE TENER UN CONSTRUCTOR, y en el caso de que no se espec√≠fique un cosntructor a una clase, tendr√° uno vac√≠o de forma impl√≠cita.
*/

class MasAnimales {
  constructor() {
    console.log('Ha nacido un pato: ü¶Ü');
  }

  hablar() {
    return 'Cuakk cuakk!';
  }
}

const pato = new MasAnimales();
console.log(pato.hablar());

/*
¬øM√âTODOS EST√ÅTICOS?
Crear m√©todos est√°ticos en una clase NO requieren crear una instancia, sino que se pueden ejecutar directamente sobre la clase.
*/

class TengoOtroAnimal {
  static {
    console.log('Adios ‚úå');
  }
  // M√©todo p√∫blico y privado (#)
  hablar() {
    console.log('Cuak otra vez!');
  }

  constructor() {
    console.log('Constructor ejecutado!');
  }
}
// Inicializaci√≥n est√°tica

const segundoPato = new TengoOtroAnimal();
